#!/bin/bash

function_print_usage(){
	echo "*********************************"
	echo "         worker ver0.01          "
	echo "*********************************"
	echo "usage :                         "
	echo "sync: setup PATH              "
	echo "init: init PATH              "
	echo "sshl: login to wm server      "
	echo "fsys: replace system.img      "
	echo "rs: replace systemui          "
	echo "	-systemUI                "
	echo "push [srcdir] [dstdir]         "
	echo "dumpmem [pid]     "
	echo "wt"
	echo "gsync"
	echo "*********************************"

}

function_sync(){
	echo "set PATH to ${local_bin}/"
	sudo cp -urv ${worker_dir}/* ${python_entry}/MYPATHPY/* ${python_entry}/APPS/* ${local_bin}
}

#hide
function_sync_gop(){
	echo "sync gopath script to ${local_bin}/"
	sudo cp -vu ${worker_dir}/gopath ${local_bin}
}

function_init(){
	echo "start python init"
	python3 ${local_bin}/envsetup.py
	echo "aliases file generating"
	cp ${python_entry}/OUT/.bash_aliases_py_clone ~/.bash_aliases
	echo "file generating complete"
	echo 'run "source ~/.bash_aliases" to finish init'
}

function_ssh_login(){
	echo 'sshpass -p "admin" ssh ws@10.2.32.46'
	sshpass -p "admin" ssh ws@10.2.32.46
}

function_fastboot_systemimg(){
	fastboot_perform_dir=${release_root_dir}/fastboot
	echo ${fastboot_perform_dir}
	mv -iv ${fastboot_perform_dir}/system.img ${release_root_dir}
	echo 'old system.img removed'
	echo '...'
	echo 'cp new system.img from server'
	sshpass -p "admin" scp  ws@10.2.32.46:/raid/work/yueqiao.liu/ASE-3/android15.1_2/out/target/product/msmnile_gvmq/system.img ${fastboot_perform_dir}
	echo 'cp finished'
}

function_replace_systemUI(){
	rm -rf ${systemUI_dir}/*
	echo 'old systemUI.apk removed'
	echo '...'
	echo 'pull new systemUI.apk from server'
	echo 'be aware systemUI.apk should be signed before pull from server'
	sshpass -p "admin" scp  ws@10.2.32.46:/raid/work/yueqiao.liu/ASE-3/android15.1_2/mysign/signapk/SystemUI.apk ${systemUI_dir}
	echo 'pull finished'

	function_adb_push ${systemUI_dir}/SystemUI.apk ${product_systemUI_dir} systemui
}

function_exit(){
	if [ $1 == "0" ]; then
		echo "some param is outdated"
		echo "can't excute before update"
	elif [ $1 == "1" ]; then
		echo "param unmatch"
		echo 'run "worker -h" for right usage'
	fi
	exit 0
}

function_adb_push(){
	if [[ $1 == "" ]]||[[ $1 == " " ]]||[[ $1 == "-h" ]]; then
		function_exit 1
	elif [[ $2 == "" ]]||[[ $2 == " " ]]||[[ $2 == "-h" ]]; then
		function_exit 1
	fi
	function_adb_ready
	echo 'adb push' $1 $2
	adb push $1 $2
	echo 'adb shell sync'
	adb shell sync

	if [ $3 == "systemui" ]; then
		echo 'restart service'
		adb shell kill  $(adb shell ps -fe  |  grep com.android.systemui  |  awk '{print $2}')
	else
		echo 'adb reboot'
		adb reboot
	fi
}

function_adb_ready(){
	echo 'adb root'
	adb root
	echo 'adb remount'
	adb remount
}

function_dumpmem(){
	if [ $1 == "" ]; then
		function_exit 1
	fi

	echo "---------- dumpsys meminfo start------------" > $worktable/meminfo_out.txt
	function_adb_ready
	for (( i = 1; i <= 10; i++ )); do
		echo "---------- dumpsys meminfo $i ------------"
		echo "---------- dumpsys meminfo $i start------------" >> $worktable/meminfo_out.txt
		adb shell dumpsys meminfo $(adb shell ps -fe  |  grep -i $1  |  awk '{print $2}') -d >> $worktable/meminfo_out.txt
		sleep 0.5
		echo "---------- dumpsys meminfo $i end------------" >> $worktable/meminfo_out.txt
	done
	echo "dumpmem finished"
}

function_worktable(){
	python3 ${local_bin}/worktable.py
	echo "open worktable"
}

function_git_sync(){
echo "git root is "$git_root
echo "************************************"
for file in `find . -iname .git` ; do
 if [ -d $file ]; then
	cd $file/..
	echo 'enter dir'
	pwd
	git pull
	echo "************************************"
	cd ${git_root}
 fi
done
}

# function_git_sync(){

# }
# # #读取第一个参数
# # read_dir

release_root_dir='/home/amai/Work/WM-motor/project/ASE-3/releasedir'
systemUI_dir='/home/amai/Work/WM-motor/project/ASE-3/releasedir/systemUI_dir'
product_systemUI_dir='system/priv-app/SystemUI'
mygithub_entry="/home/amai/Work/MY-github"
python_entry=${mygithub_entry}/work_tool/python
local_bin="/usr/local/bin"
worker_dir="/home/amai/Work/MY-github/work_tool/shell/MYPATHSHELL"
worktable='/home/amai/Work/worktable'
git_root=$(pwd)

if [[ $1 == "" ]]||[[ $1 == " " ]]||[[ $1 == "-h" ]]; then
	function_print_usage
elif [ $1 == "sync" ]; then
	function_sync
elif [ $1 == "syncgop" ]; then
	function_sync_gop
elif [ $1 == "init" ]; then
	function_init
elif [ $1 == "sshl" ]; then
	function_ssh_login
elif [ $1 == "fsys" ]; then
	function_fastboot_systemimg
# elif [ $1 == "pull" -a $2 == "systemUI" ]; then
# 	# function_exit 0
# 	function_replace_systemUI
elif [ $1 == "rs" ]; then
	function_replace_systemUI
elif [ $1 == "push" ]; then
	function_adb_push $2 $3
elif [ $1 == "dumpmem" ]; then
	function_dumpmem $2
elif [ $1 == "wt" ]; then
	function_worktable
elif [ $1 == "gsync" ]; then
	function_git_sync $1
fi